spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/money_tracker  # Usa 'db' en lugar de 'localhost'
    username: postgres
    password: admin123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update  # Crea o actualiza tablas seg√∫n tus entidades
    show-sql: true     # Muestra las queries SQL en los logs
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect  # Dialecto para PostgreSQL
        format_sql: true  # Formatea el SQL para mejor legibilidad
        jdbc:
          batch_size: 20
#        order_inserts: true
  ai:
    ollama:
      base-url: http://localhost:11434
      embedding:
#        model: deepseek-r1:7b
        model: llama3.1:8b
#    vectorstore:
#      pgvector:
#      index-type: HNSW
#      distance-type: COSINE_DISTANCE
#      dimensions: 1536
#      batching-strategy: TOKEN_COUNT # Optional: Controls how documents are batched for embedding
#      max-document-batch-size: 10000 # Optional: Maximum number of documents per batch

  servlet:
    multipart:
      max-file-size: 120MB
      max-request-size: 120MB
  # Timeouts
  mvc:
    async:
      request-timeout: 300000

  sql:
    init:
      mode: never

